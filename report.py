# coding=utf-8
import argparse

from pylatex import Document, Section, Subsection, Command, LongTable
from pylatex.utils import NoEscape
import os
import json
import re

def getFromSquareBrackets(s):
    return re.findall("\[(.*?)\]", s)

def fill_document(doc, path):

    # Directorio en el que se encuentran todos los JSON 
    directory = path
    diff_files = []
    virus_files = []


    # Recorrer los archivos del directorio

    for filename in os.listdir(directory):
        f = os.path.join(directory, filename)

        if os.path.isfile(f):
            if filename.startswith("virustotal"):
                virus_files.append(f)
            else:
                diff_files.append(f)

    # Sección de permisos
    with doc.create(Section("Permissions")):
             for f in diff_files:
                file = open(f)

                data = json.load(file)
                data = json.loads(data)
                if data == {}: continue;

                with doc.create(Subsection(f)):
                    with doc.create(LongTable("l")) as data_table:
                            data_table.add_hline()
                            data_table.add_row(["Added Permissions"])
                            data_table.add_hline()
                            data_table.end_table_header()
                            data_table.add_hline()
                            data_table.end_table_last_footer()
                            if "dictionary_item_added" in data:
                                for value in data["dictionary_item_added"]:
                                    row = getFromSquareBrackets(value.replace('root',''))[1]
                                    data_table.add_row([row])
                            else:
                                data_table.add_row(["No added permissions"])

    # Sección Antivirus Scan
    with doc.create(Section("Antivirus Scan")):

             for f in virus_files:
                    file = open(f)
                    data = json.load(file)
                    if data == {}: continue;
                    if data["positives"] != 0:
                            with doc.create(Subsection(f)):
               
                                with doc.create(LongTable("l l")) as data_table:
                                        data_table.add_hline()
                                        data_table.add_row(["Antivirus", "Virus founds"])
                                        data_table.add_hline()
                                        data_table.end_table_header()
                                        data_table.add_hline()
                                        data_table.end_table_last_footer()
                                        for key,value in data["scans"].items():
                                            if value["result"] is not None:
                                                row = [key, value["result"]]
                                                data_table.add_row(row)




if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='Apk Analyzer')
    parser.add_argument('-path', '--path', nargs=1)
    args = parser.parse_args()

    geometry_options = {
        "margin": "2cm",
        "includeheadfoot": True
    }

    doc = Document('report', geometry_options=geometry_options)

    doc.preamble.append(Command('title', 'Malware Analysis'))
    doc.preamble.append(Command('date', NoEscape(r'\today')))
    doc.append(NoEscape(r'\maketitle'))

    fill_document(doc, args.path[0])

    doc.generate_pdf('report_generated', clean_tex=False)



