from androguard.core.bytecodes import dvm
from androguard.core.analysis import analysis
from androguard.misc import AnalyzeAPK, AnalyzeDex
from deepdiff import DeepDiff
import json,os
from androguard.core.analysis.analysis import ExternalMethod
import matplotlib.pyplot as plt
import networkx as nx
import argparse
from json import dumps, loads, JSONEncoder, JSONDecoder
import pickle
from inout import IO
from virustotal import VTAnalysis

class Analysis():
    def __init__(self):
        pass
    
    def analyze_apk(self, apk_path):
        json_info = {}
        a,d,dx = AnalyzeAPK(apk_path)
        json_info["Name"] = a.get_app_name()
        json_info["is_signed"] = a.is_signed()
        json_info["permissions"] = a.get_permissions()
        json_info["details_permission"] = a.get_details_permissions()
        json_info["activities"] = list(a.get_activities())
        json_info["files"] = list(a.get_files())
        json_info["main"] = list(a.get_main_activities())

        return json_info
    
    def analyze_vt(apk_mod):
        vt_analysis = VTAnalysis(apk_mod, "vt_erw.json")
        vt_analysis.analyze()

    def compare(self,result_apk_original, result_apk_mod):
         return DeepDiff(result_apk_original, result_apk_mod, ignore_order=True)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Apk Analyzer')
    parser.add_argument('-original', '--original', nargs=1)
    parser.add_argument('-mod', '--mod', nargs='+')
    parser.add_argument('-output', '--o', nargs=1)

    args = parser.parse_args()
    print(args.o)
    analyzer = Analysis()

    original = analyzer.analyze_apk(args.original[0])
    mod = analyzer.analyze_apk(args.mod[0])

    inout.save_file(original, "original.json")
    inout.save_file(mod, "mod.json")


    output = analyzer.compare(original, mod)

    inout = IO()
    inout.save_file(output, args.o[0])

    analyzer.analyze_vt(args.mod[0])

