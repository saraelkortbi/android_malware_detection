from androguard.misc import AnalyzeAPK, AnalyzeDex
from deepdiff import DeepDiff
import argparse


from inout import IO
from virustotal import VTAnalysis

class Analysis():
    def __init__(self):
        pass
    
    def analyze_apk(self, apk_path):
        json_info = {}
        a,d,dx = AnalyzeAPK(apk_path)
        json_info["Name"] = a.get_app_name()
        json_info["is_signed"] = a.is_signed()
        json_info["permissions"] = a.get_permissions()
        json_info["details_permission"] = a.get_details_permissions()
        json_info["activities"] = list(a.get_activities())
        json_info["files"] = list(a.get_files())
        json_info["main"] = list(a.get_main_activities())

        return json_info
    
    def analyze_vt(self,apk_mod):
        vt_analysis = VTAnalysis(apk_mod, "vt_result.json")
        vt_analysis.analyze()

    def compare(self,result_apk_original, result_apk_mod):
         return DeepDiff(result_apk_original, result_apk_mod, ignore_order=True)


if __name__ == "__main__":

    parser = argparse.ArgumentParser(description='Apk Analyzer')
    parser.add_argument('-original', '--original', nargs=1)
    parser.add_argument('-mod', '--mod', nargs='+')
    parser.add_argument('-output', '--o', nargs=1)

    args = parser.parse_args()

    print("#### Starting analysis ######")
    print("Original APK: " + args.original[0])
    print("MOD APK: " + args.mod[0])

    inout = IO()

    analyzer = Analysis()

    original = analyzer.analyze_apk(args.original[0])
    mod = analyzer.analyze_apk(args.mod[0])

    IO.save_file(original, "original.json")
    IO.save_file(mod, "mod.json")

    output = analyzer.compare(original, mod)

    inout.save_file(output, args.o[0])

    analyzer.analyze_vt(args.mod[0])

